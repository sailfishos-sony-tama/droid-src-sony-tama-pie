From 583c425e29fa32b6030923d1ab7e324992c0bca3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bj=C3=B6rn=20Bidar?= <theodorstormgrade@gmail.com>
Date: Sun, 18 Oct 2020 21:13:35 +0300
Subject: [PATCH 4/5] Revert "FR 46082 - SUPL Network Setup Improvements"

This reverts commit 35a95e0a9bc9aeab1bb1847180babda2da5fbf90.
---
 sdm845/core/LocAdapterBase.cpp |  4 ++--
 sdm845/core/LocAdapterBase.h   |  4 ++--
 sdm845/core/LocApiBase.cpp     | 11 +++++------
 sdm845/core/LocApiBase.h       |  7 +++----
 sdm845/gnss/Agps.cpp           | 24 +++++++++++-------------
 sdm845/gnss/Agps.h             | 25 ++++++++++---------------
 sdm845/gnss/GnssAdapter.cpp    | 13 ++++++-------
 sdm845/gnss/GnssAdapter.h      |  4 ++--
 sdm845/utils/gps_extended_c.h  | 12 ------------
 9 files changed, 41 insertions(+), 63 deletions(-)

diff --git a/sdm845/core/LocAdapterBase.cpp b/sdm845/core/LocAdapterBase.cpp
index 12164c6..b7b235d 100644
--- a/sdm845/core/LocAdapterBase.cpp
+++ b/sdm845/core/LocAdapterBase.cpp
@@ -129,7 +129,7 @@ bool LocAdapterBase::
 DEFAULT_IMPL(false)
 
 bool LocAdapterBase::
-    requestATL(int /*connHandle*/, LocAGpsType /*agps_type*/, LocApnTypeMask /*mask*/)
+    requestATL(int /*connHandle*/, LocAGpsType /*agps_type*/)
 DEFAULT_IMPL(false)
 
 bool LocAdapterBase::
@@ -137,7 +137,7 @@ bool LocAdapterBase::
 DEFAULT_IMPL(false)
 
 bool LocAdapterBase::
-    requestSuplES(int /*connHandle*/, LocApnTypeMask /*mask*/)
+    requestSuplES(int /*connHandle*/)
 DEFAULT_IMPL(false)
 
 bool LocAdapterBase::
diff --git a/sdm845/core/LocAdapterBase.h b/sdm845/core/LocAdapterBase.h
index 5fde5e7..b7817dc 100644
--- a/sdm845/core/LocAdapterBase.h
+++ b/sdm845/core/LocAdapterBase.h
@@ -145,9 +145,9 @@ public:
     virtual bool requestXtraData();
     virtual bool requestTime();
     virtual bool requestLocation();
-    virtual bool requestATL(int connHandle, LocAGpsType agps_type, LocApnTypeMask mask);
+    virtual bool requestATL(int connHandle, LocAGpsType agps_type);
     virtual bool releaseATL(int connHandle);
-    virtual bool requestSuplES(int connHandle, LocApnTypeMask mask);
+    virtual bool requestSuplES(int connHandle);
     virtual bool reportDataCallOpened();
     virtual bool reportDataCallClosed();
     virtual bool requestNiNotifyEvent(const GnssNiNotification &notify, const void* data);
diff --git a/sdm845/core/LocApiBase.cpp b/sdm845/core/LocApiBase.cpp
index 1eb2621..c62c1a8 100644
--- a/sdm845/core/LocApiBase.cpp
+++ b/sdm845/core/LocApiBase.cpp
@@ -381,10 +381,10 @@ void LocApiBase::requestLocation()
     TO_1ST_HANDLING_LOCADAPTERS(mLocAdapters[i]->requestLocation());
 }
 
-void LocApiBase::requestATL(int connHandle, LocAGpsType agps_type, LocApnTypeMask mask)
+void LocApiBase::requestATL(int connHandle, LocAGpsType agps_type)
 {
     // loop through adapters, and deliver to the first handling adapter.
-    TO_1ST_HANDLING_LOCADAPTERS(mLocAdapters[i]->requestATL(connHandle, agps_type, mask));
+    TO_1ST_HANDLING_LOCADAPTERS(mLocAdapters[i]->requestATL(connHandle, agps_type));
 }
 
 void LocApiBase::releaseATL(int connHandle)
@@ -393,10 +393,10 @@ void LocApiBase::releaseATL(int connHandle)
     TO_1ST_HANDLING_LOCADAPTERS(mLocAdapters[i]->releaseATL(connHandle));
 }
 
-void LocApiBase::requestSuplES(int connHandle, LocApnTypeMask mask)
+void LocApiBase::requestSuplES(int connHandle)
 {
     // loop through adapters, and deliver to the first handling adapter.
-    TO_1ST_HANDLING_LOCADAPTERS(mLocAdapters[i]->requestSuplES(connHandle, mask));
+    TO_1ST_HANDLING_LOCADAPTERS(mLocAdapters[i]->requestSuplES(connHandle));
 }
 
 void LocApiBase::reportDataCallOpened()
@@ -512,8 +512,7 @@ DEFAULT_IMPL(LOC_API_ADAPTER_ERR_SUCCESS)
 
 enum loc_api_adapter_err LocApiBase::
    atlOpenStatus(int /*handle*/, int /*is_succ*/, char* /*apn*/,
-                 AGpsBearerType /*bear*/, LocAGpsType /*agpsType*/,
-                 LocApnTypeMask /*mask*/)
+                 AGpsBearerType /*bear*/, LocAGpsType /*agpsType*/)
 DEFAULT_IMPL(LOC_API_ADAPTER_ERR_SUCCESS)
 
 enum loc_api_adapter_err LocApiBase::
diff --git a/sdm845/core/LocApiBase.h b/sdm845/core/LocApiBase.h
index 3b67abd..19629fa 100644
--- a/sdm845/core/LocApiBase.h
+++ b/sdm845/core/LocApiBase.h
@@ -127,9 +127,9 @@ public:
     void requestXtraData();
     void requestTime();
     void requestLocation();
-    void requestATL(int connHandle, LocAGpsType agps_type, LocApnTypeMask mask);
+    void requestATL(int connHandle, LocAGpsType agps_type);
     void releaseATL(int connHandle);
-    void requestSuplES(int connHandle, LocApnTypeMask mask);
+    void requestSuplES(int connHandle);
     void reportDataCallOpened();
     void reportDataCallClosed();
     void requestNiNotify(GnssNiNotification &notify, const void* data);
@@ -168,8 +168,7 @@ public:
     virtual enum loc_api_adapter_err
         requestXtraServer();
     virtual enum loc_api_adapter_err
-        atlOpenStatus(int handle, int is_succ, char* apn, AGpsBearerType bear,
-                      LocAGpsType agpsType, LocApnTypeMask mask);
+        atlOpenStatus(int handle, int is_succ, char* apn, AGpsBearerType bear, LocAGpsType agpsType);
     virtual enum loc_api_adapter_err
         atlCloseStatus(int handle, int is_succ);
     virtual enum loc_api_adapter_err
diff --git a/sdm845/gnss/Agps.cpp b/sdm845/gnss/Agps.cpp
index f2ca8e4..6ce0c34 100644
--- a/sdm845/gnss/Agps.cpp
+++ b/sdm845/gnss/Agps.cpp
@@ -26,14 +26,13 @@
  * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  */
-#define LOG_NDEBUG 0
+
 #define LOG_TAG "LocSvc_Agps"
 
 #include <Agps.h>
 #include <loc_pla.h>
 #include <ContextBase.h>
 #include <loc_timer.h>
-#include <inttypes.h>
 
 /* --------------------------------------------------------------------
  *   AGPS State Machine Methods
@@ -362,13 +361,13 @@ void AgpsStateMachine::notifyEventToSubscriber(
         case AGPS_EVENT_GRANTED:
             mAgpsManager->mAtlOpenStatusCb(
                     subscriberToNotify->mConnHandle, 1, getAPN(),
-                    getBearer(), mAgpsType, LOC_APN_TYPE_MASK_SUPL);
+                    getBearer(), mAgpsType);
             break;
 
         case AGPS_EVENT_DENIED:
             mAgpsManager->mAtlOpenStatusCb(
                     subscriberToNotify->mConnHandle, 0, getAPN(),
-                    getBearer(), mAgpsType, LOC_APN_TYPE_MASK_SUPL);
+                    getBearer(), mAgpsType);
             break;
 
         case AGPS_EVENT_UNSUBSCRIBE:
@@ -573,7 +572,7 @@ void DSStateMachine :: retryCallback()
     mAgpsManager->mSendMsgToAdapterQueueFn(
             new AgpsMsgRequestATL(
                     mAgpsManager, subscriber->mConnHandle,
-                    LOC_AGPS_TYPE_SUPL_ES, subscriber->mApnTypeMask));
+                    LOC_AGPS_TYPE_SUPL_ES));
 }
 
 /* Overridden method
@@ -663,8 +662,7 @@ void DSStateMachine::notifyEventToSubscriber(
         case AGPS_EVENT_GRANTED:
             mAgpsManager->mAtlOpenStatusCb(
                     subscriberToNotify->mConnHandle, 1, NULL,
-                    AGPS_APN_BEARER_INVALID, LOC_AGPS_TYPE_SUPL_ES,
-                    LOC_APN_TYPE_MASK_EMERGENCY);
+                    AGPS_APN_BEARER_INVALID, LOC_AGPS_TYPE_SUPL_ES);
             break;
 
         case AGPS_EVENT_DENIED:
@@ -674,7 +672,7 @@ void DSStateMachine::notifyEventToSubscriber(
             mAgpsManager->mSendMsgToAdapterQueueFn(
                     new AgpsMsgRequestATL(
                             mAgpsManager, subscriberToNotify->mConnHandle,
-                            LOC_AGPS_TYPE_SUPL, subscriberToNotify->mApnTypeMask));
+                            LOC_AGPS_TYPE_SUPL));
             break;
 
         case AGPS_EVENT_UNSUBSCRIBE:
@@ -769,10 +767,10 @@ AgpsStateMachine* AgpsManager::getAgpsStateMachine(AGpsExtType agpsType) {
     return NULL;
 }
 
-void AgpsManager::requestATL(int connHandle, AGpsExtType agpsType, LocApnTypeMask mask){
+void AgpsManager::requestATL(int connHandle, AGpsExtType agpsType){
 
-    LOC_LOGD("AgpsManager::requestATL(): connHandle %d, agpsType %d apnTypeMask %" PRIu64,
-               connHandle, agpsType, mask);
+    LOC_LOGD("AgpsManager::requestATL(): connHandle %d, agpsType %d",
+               connHandle, agpsType);
 
     AgpsStateMachine* sm = getAgpsStateMachine(agpsType);
 
@@ -780,12 +778,12 @@ void AgpsManager::requestATL(int connHandle, AGpsExtType agpsType, LocApnTypeMas
 
         LOC_LOGE("No AGPS State Machine for agpsType: %d", agpsType);
         mAtlOpenStatusCb(
-                connHandle, 0, NULL, AGPS_APN_BEARER_INVALID, agpsType, mask);
+                connHandle, 0, NULL, AGPS_APN_BEARER_INVALID, agpsType);
         return;
     }
 
     /* Invoke AGPS SM processing */
-    AgpsSubscriber subscriber(connHandle, false, false, mask);
+    AgpsSubscriber subscriber(connHandle, false, false);
     sm->setCurrentSubscriber(&subscriber);
 
     /* If DS State Machine, wait for close complete */
diff --git a/sdm845/gnss/Agps.h b/sdm845/gnss/Agps.h
index 3ab4cfb..703a475 100644
--- a/sdm845/gnss/Agps.h
+++ b/sdm845/gnss/Agps.h
@@ -41,10 +41,9 @@
  * Passed in by Adapter to AgpsManager */
 typedef std::function<void(
         int handle, int isSuccess, char* apn,
-        AGpsBearerType bearerType, AGpsExtType agpsType,
-        LocApnTypeMask mask)> AgpsAtlOpenStatusCb;
+        AGpsBearerType bearerType, AGpsExtType agpsType)>  AgpsAtlOpenStatusCb;
 
-typedef std::function<void(int handle, int isSuccess)> AgpsAtlCloseStatusCb;
+typedef std::function<void(int handle, int isSuccess)>     AgpsAtlCloseStatusCb;
 
 /* DS Client control APIs
  * Passed in by Adapter to AgpsManager */
@@ -110,15 +109,12 @@ public:
      * inactive state. */
     bool mWaitForCloseComplete;
     bool mIsInactive;
-    LocApnTypeMask mApnTypeMask;
 
     inline AgpsSubscriber(
-            int connHandle, bool waitForCloseComplete, bool isInactive,
-            LocApnTypeMask apnTypeMask) :
+            int connHandle, bool waitForCloseComplete, bool isInactive) :
             mConnHandle(connHandle),
             mWaitForCloseComplete(waitForCloseComplete),
-            mIsInactive(isInactive),
-            mApnTypeMask(apnTypeMask) {}
+            mIsInactive(isInactive) {}
     inline virtual ~AgpsSubscriber() {}
 
     inline virtual bool equals(const AgpsSubscriber *s) const
@@ -126,7 +122,7 @@ public:
 
     inline virtual AgpsSubscriber* clone()
     { return new AgpsSubscriber(
-            mConnHandle, mWaitForCloseComplete, mIsInactive, mApnTypeMask); }
+            mConnHandle, mWaitForCloseComplete, mIsInactive); }
 };
 
 /* AGPS STATE MACHINE */
@@ -309,7 +305,7 @@ public:
     void createAgpsStateMachines();
 
     /* Process incoming ATL requests */
-    void requestATL(int connHandle, AGpsExtType agpsType, LocApnTypeMask mask);
+    void requestATL(int connHandle, AGpsExtType agpsType);
     void releaseATL(int connHandle);
 
     /* Process incoming DS Client data call events */
@@ -357,12 +353,11 @@ struct AgpsMsgRequestATL: public LocMsg {
     AgpsManager* mAgpsManager;
     int mConnHandle;
     AGpsExtType mAgpsType;
-    LocApnTypeMask mApnTypeMask;
 
     inline AgpsMsgRequestATL(AgpsManager* agpsManager, int connHandle,
-            AGpsExtType agpsType, LocApnTypeMask mask) :
-            LocMsg(), mAgpsManager(agpsManager), mConnHandle(connHandle),
-            mAgpsType(agpsType), mApnTypeMask(mask) {
+            AGpsExtType agpsType) :
+            LocMsg(), mAgpsManager(agpsManager), mConnHandle(connHandle), mAgpsType(
+                    agpsType) {
 
         LOC_LOGV("AgpsMsgRequestATL");
     }
@@ -370,7 +365,7 @@ struct AgpsMsgRequestATL: public LocMsg {
     inline virtual void proc() const {
 
         LOC_LOGV("AgpsMsgRequestATL::proc()");
-        mAgpsManager->requestATL(mConnHandle, mAgpsType, mApnTypeMask);
+        mAgpsManager->requestATL(mConnHandle, mAgpsType);
     }
 };
 
diff --git a/sdm845/gnss/GnssAdapter.cpp b/sdm845/gnss/GnssAdapter.cpp
index 80423b3..833f996 100644
--- a/sdm845/gnss/GnssAdapter.cpp
+++ b/sdm845/gnss/GnssAdapter.cpp
@@ -26,7 +26,6 @@
  * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  */
-#define LOG_NDEBUG 0
 #define LOG_TAG "LocSvc_GnssAdapter"
 
 #include <inttypes.h>
@@ -99,10 +98,10 @@ GnssAdapter::GnssAdapter() :
     /* Set ATL open/close callbacks */
     AgpsAtlOpenStatusCb atlOpenStatusCb =
             [this](int handle, int isSuccess, char* apn,
-                    AGpsBearerType bearerType, AGpsExtType agpsType, LocApnTypeMask mask) {
+                    AGpsBearerType bearerType, AGpsExtType agpsType) {
 
                 mLocApi->atlOpenStatus(
-                        handle, isSuccess, apn, bearerType, agpsType, mask);
+                        handle, isSuccess, apn, bearerType, agpsType);
             };
     AgpsAtlCloseStatusCb atlCloseStatusCb =
             [this](int handle, int isSuccess) {
@@ -3413,12 +3412,12 @@ void GnssAdapter::initAgpsCommand(const AgpsCbInfo& cbInfo){
  * Triggers the AGPS state machine to setup AGPS call for below WWAN types:
  * eQMI_LOC_WWAN_TYPE_INTERNET_V02
  * eQMI_LOC_WWAN_TYPE_AGNSS_V02 */
-bool GnssAdapter::requestATL(int connHandle, LocAGpsType agpsType, LocApnTypeMask mask){
+bool GnssAdapter::requestATL(int connHandle, LocAGpsType agpsType){
 
     LOC_LOGI("GnssAdapter::requestATL");
 
     sendMsg( new AgpsMsgRequestATL(
-             &mAgpsManager, connHandle, (AGpsExtType)agpsType, mask));
+             &mAgpsManager, connHandle, (AGpsExtType)agpsType));
 
     return true;
 }
@@ -3428,12 +3427,12 @@ bool GnssAdapter::requestATL(int connHandle, LocAGpsType agpsType, LocApnTypeMas
  * eQMI_LOC_SERVER_REQUEST_OPEN_V02
  * Triggers the AGPS state machine to setup AGPS call for below WWAN types:
  * eQMI_LOC_WWAN_TYPE_AGNSS_EMERGENCY_V02 */
-bool GnssAdapter::requestSuplES(int connHandle, LocApnTypeMask mask){
+bool GnssAdapter::requestSuplES(int connHandle){
 
     LOC_LOGI("GnssAdapter::requestSuplES");
 
     sendMsg( new AgpsMsgRequestATL(
-             &mAgpsManager, connHandle, LOC_AGPS_TYPE_SUPL_ES, mask));
+             &mAgpsManager, connHandle, LOC_AGPS_TYPE_SUPL_ES));
 
     return true;
 }
diff --git a/sdm845/gnss/GnssAdapter.h b/sdm845/gnss/GnssAdapter.h
index 9d54e6a..b324157 100644
--- a/sdm845/gnss/GnssAdapter.h
+++ b/sdm845/gnss/GnssAdapter.h
@@ -313,9 +313,9 @@ public:
     virtual void reportGnssSvIdConfigEvent(const GnssSvIdConfig& config);
     virtual void reportGnssSvTypeConfigEvent(const GnssSvTypeConfig& config);
 
-    virtual bool requestATL(int connHandle, LocAGpsType agps_type, LocApnTypeMask mask);
+    virtual bool requestATL(int connHandle, LocAGpsType agps_type);
     virtual bool releaseATL(int connHandle);
-    virtual bool requestSuplES(int connHandle, LocApnTypeMask mask);
+    virtual bool requestSuplES(int connHandle);
     virtual bool reportDataCallOpened();
     virtual bool reportDataCallClosed();
     virtual bool reportOdcpiRequestEvent(OdcpiRequestInfo& request);
diff --git a/sdm845/utils/gps_extended_c.h b/sdm845/utils/gps_extended_c.h
index 01f469d..7c6d609 100644
--- a/sdm845/utils/gps_extended_c.h
+++ b/sdm845/utils/gps_extended_c.h
@@ -169,18 +169,6 @@ typedef int16_t AGpsBearerType;
 #define AGPS_APN_BEARER_IPV6        2
 #define AGPS_APN_BEARER_IPV4V6      3
 
-typedef uint64_t LocApnTypeMask;
-#define LOC_APN_TYPE_MASK_DEFAULT   ((LocApnTypeMask)0x0000000000000001ull) /**<  Denotes APN type for Default/Internet traffic  */
-#define LOC_APN_TYPE_MASK_IMS       ((LocApnTypeMask)0x0000000000000002ull) /**<  Denotes  APN type for IP Multimedia Subsystem  */
-#define LOC_APN_TYPE_MASK_MMS       ((LocApnTypeMask)0x0000000000000004ull) /**<  Denotes APN type for Multimedia Messaging Service  */
-#define LOC_APN_TYPE_MASK_DUN       ((LocApnTypeMask)0x0000000000000008ull) /**<  Denotes APN type for Dial Up Network  */
-#define LOC_APN_TYPE_MASK_SUPL      ((LocApnTypeMask)0x0000000000000010ull) /**<  Denotes APN type for Secure User Plane Location  */
-#define LOC_APN_TYPE_MASK_HIPRI     ((LocApnTypeMask)0x0000000000000020ull) /**<  Denotes APN type for High Priority Mobile Data  */
-#define LOC_APN_TYPE_MASK_FOTA      ((LocApnTypeMask)0x0000000000000040ull) /**<  Denotes APN type for over the air administration  */
-#define LOC_APN_TYPE_MASK_CBS       ((LocApnTypeMask)0x0000000000000080ull) /**<  Denotes APN type for Carrier Branded Services  */
-#define LOC_APN_TYPE_MASK_IA        ((LocApnTypeMask)0x0000000000000100ull) /**<  Denotes APN type for Initial Attach  */
-#define LOC_APN_TYPE_MASK_EMERGENCY ((LocApnTypeMask)0x0000000000000200ull) /**<  Denotes APN type for emergency  */
-
 typedef enum {
     AGPS_CB_PRIORITY_LOW  = 1,
     AGPS_CB_PRIORITY_MED  = 2,
-- 
2.28.0

